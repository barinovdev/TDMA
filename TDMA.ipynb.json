{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Метод прогонки"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Обозначения:\n",
    "\n",
    "$\\tau$ - шаг по времени\n",
    "\n",
    "$h$ - шаг по оси y\n",
    "\n",
    "$n$ - размер матрицы\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Начальные условия:\n",
    "\n",
    "$C(t=0, y) = 1 - (1 - y)^2$\n",
    "\n",
    "### Граничные условия:\n",
    "\n",
    "$\\frac {\\partial c}{\\partial y} = 0$ при $y = 1$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Уравнение в дискретном виде:\n",
    "\n",
    "$ - \\frac{\\tau}{h^2} \\cdot C^{(n+1)}_{(k-1)} + ( 2 \\cdot \\frac{\\tau}{h^2} + 1) \\cdot C^{(n+1)}_{k} - \\frac{\\tau}{h^2} \\cdot C^{(n+1)}_{(k+1)} = С^{n}_{k}$\n",
    "\n",
    "Отсюда получаем трехдиагональную матрицу А. Согласно начальным и граничным условиям задаем некоторые элементы А.\n",
    "Соблюдаем диагональное преобладание, т.е. $ \\tau < h^2 $.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Решение"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 1.    0.    0.   ...,  0.    0.    0.  ]\n",
      " [-0.25  1.5  -0.25 ...,  0.    0.    0.  ]\n",
      " [ 0.   -0.25  1.5  ...,  0.    0.    0.  ]\n",
      " ..., \n",
      " [ 0.    0.    0.   ...,  1.5  -0.25  0.  ]\n",
      " [ 0.    0.    0.   ..., -0.25  1.5  -0.25]\n",
      " [ 0.    0.    0.   ...,  0.   -1.    1.  ]]\n",
      "[ 0.          0.07144003  0.11504017  0.15320101  0.18976586  0.22539414\n",
      "  0.26019899  0.29419983  0.32739997  0.35979999  0.3914      0.4222\n",
      "  0.4522      0.4814      0.5098      0.5374      0.5642      0.5902\n",
      "  0.6154      0.6398      0.6634      0.6862      0.7082      0.7294\n",
      "  0.7498      0.7694      0.7882      0.8062      0.8234      0.8398\n",
      "  0.8554      0.8702      0.8842      0.8974      0.9098      0.9214\n",
      "  0.9322      0.9422      0.9514      0.9598      0.9674      0.9742\n",
      "  0.9802      0.9854      0.98980001  0.99340007  0.99620042  0.99820244\n",
      "  0.99941421  0.99988284  0.99988284]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "n = 51\n",
    "tau = 1/10000.\n",
    "h = 1/50.\n",
    "t = 0\n",
    "f = []\n",
    "def c(t, y):\n",
    "    return 1 - (1 - y)**2\n",
    "for i  in xrange(1, n):\n",
    "    y = i * h\n",
    "    f.append(c(t, y))\n",
    "f.append(0)\n",
    "f[0] = 0\n",
    "\n",
    "def tridiag(a, c, b, k1=-1, k2=0, k3=1):\n",
    "    return np.diag(a, k1) + np.diag(c, k2) + np.diag(b, k3)\n",
    "\n",
    "a = np.ones(n - 1); c = np.ones(n); b = np.ones(n - 1)\n",
    "def e(tau, h): return -tau / h**2\n",
    "def g(tau, h): return 2*(tau / h**2) + 1\n",
    "\n",
    "a = [x * e(tau, h) for x in a]\n",
    "c = [y * g(tau, h) for y in c]\n",
    "b = [x * e(tau, h) for x in b]\n",
    "a[n - 2] = -1\n",
    "c[n - 1] = 1\n",
    "c[0] = 1\n",
    "b[0] = 0\n",
    "A = tridiag(a, c, b)\n",
    "print A\n",
    "\n",
    "x = np.linalg.solve(A, f)\n",
    "print x\n",
    "xj = []\n",
    "xj.append(x)\n",
    "x[-1] = 0\n",
    "x[0] = 0\n",
    "\n",
    "for j in xrange(1, 10000):\n",
    "    x_new = np.linalg.solve(A, x)\n",
    "    xj.append(x_new)\n",
    "    x_new[-1] = 0\n",
    "    x_new[0] = 0\n",
    "    x = x_new\n",
    "#print xj"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## График"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x118b1a9d0>"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nWN4AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x117eb7350>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# import matplotlib.pyplot as plt\n",
    "% matplotlib inline\n",
    "\n",
    "y_plot = np.linspace(0,1,50)\n",
    "\n",
    "plt.plot(y_plot, xj[0][:-1], label='$C_{t}=0$')\n",
    "plt.plot(y_plot, xj[4000][:-1], label='$C_{t}=4000$')\n",
    "plt.plot(y_plot, xj[9000][:-1], label='$C_{t}=9000$')\n",
    "\n",
    "plt.suptitle('Dependence of $c_{i}$ on $y$', fontsize=20)\n",
    "plt.legend(bbox_to_anchor = (1.05, 1), loc = 2, borderaxespad = 0, fontsize=15)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
